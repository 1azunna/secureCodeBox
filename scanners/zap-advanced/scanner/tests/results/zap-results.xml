<?xml version="1.0"?><OWASPZAPReport version="2.10.0" generated="Sat, 15 May 2021 11:39:28">
<site name="https://petstore" host="petstore" port="443" ssl="true"><alerts><alertitem>
  <pluginid>10106</pluginid>
  <alertRef>10106</alertRef>
  <alert>HTTP Only Site</alert>
  <name>HTTP Only Site</name>
  <riskcode>2</riskcode>
  <confidence>2</confidence>
  <riskdesc>Medium (Medium)</riskdesc>
  <desc>&lt;p&gt;The site is only served under HTTP and not HTTPS.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/pet/10/uploadImage</uri>
  <method>POST</method>
  </instance>
  </instances>
  <count>1</count>
  <solution>&lt;p&gt;Configure your web or application server to use SSL (https).&lt;/p&gt;</solution>
  <otherinfo>&lt;p&gt;Failed to connect.&lt;/p&gt;&lt;p&gt;ZAP attempted to connect via: https://petstore:443/v2/pet/10/uploadImage&lt;/p&gt;</otherinfo>
  <reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://letsencrypt.org/&lt;/p&gt;</reference>
  <cweid>311</cweid>
  <wascid>4</wascid>
  <sourceid>1</sourceid>
</alertitem>
</alerts></site><site name="https://snippets.cdn.mozilla.net" host="snippets.cdn.mozilla.net" port="443" ssl="true"><alerts><alertitem>
  <pluginid>100001</pluginid>
  <alertRef>100001</alertRef>
  <alert>Unexpected Content-Type was returned</alert>
  <name>Unexpected Content-Type was returned</name>
  <riskcode>1</riskcode>
  <confidence>3</confidence>
  <riskdesc>Low (High)</riskdesc>
  <desc>&lt;p&gt;A Content-Type of text/html was returned by the server.&lt;/p&gt;&lt;p&gt;This is not one of the types expected to be returned by an API.&lt;/p&gt;&lt;p&gt;Raised by the &apos;Alert on Unexpected Content Types&apos; script&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>https://snippets.cdn.mozilla.net/6/Firefox/85.0/20210118153634/Linux_x86_64-gcc3/en-US/release-cck-ubuntu/Linux%205.10.25-linuxkit%20(GTK%203.24.20%2Clibpulse%20not-available)/canonical/1.0/</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  </instances>
  <count>1</count>
  <solution>&lt;p&gt;&lt;/p&gt;</solution>
  <reference>&lt;p&gt;&lt;/p&gt;</reference>
  <sourceid>4</sourceid>
</alertitem>
</alerts></site><site name="https://content-signature-2.cdn.mozilla.net" host="content-signature-2.cdn.mozilla.net" port="443" ssl="true"><alerts><alertitem>
  <pluginid>100001</pluginid>
  <alertRef>100001</alertRef>
  <alert>Unexpected Content-Type was returned</alert>
  <name>Unexpected Content-Type was returned</name>
  <riskcode>1</riskcode>
  <confidence>3</confidence>
  <riskdesc>Low (High)</riskdesc>
  <desc>&lt;p&gt;A Content-Type of binary/octet-stream was returned by the server.&lt;/p&gt;&lt;p&gt;This is not one of the types expected to be returned by an API.&lt;/p&gt;&lt;p&gt;Raised by the &apos;Alert on Unexpected Content Types&apos; script&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>https://content-signature-2.cdn.mozilla.net/chains/remote-settings.content-signature.mozilla.org-2021-07-01-15-05-56.chain</uri>
  <method>GET</method>
  <evidence>binary/octet-stream</evidence>
  </instance>
  <instance>
  <uri>https://content-signature-2.cdn.mozilla.net/chains/remote-settings.content-signature.mozilla.org-2021-06-11-15-04-32.chain</uri>
  <method>GET</method>
  <evidence>binary/octet-stream</evidence>
  </instance>
  </instances>
  <count>2</count>
  <solution>&lt;p&gt;&lt;/p&gt;</solution>
  <reference>&lt;p&gt;&lt;/p&gt;</reference>
  <sourceid>4</sourceid>
</alertitem>
</alerts></site><site name="http://petstore:8080" host="petstore" port="8080" ssl="false"><alerts><alertitem>
  <pluginid>100000</pluginid>
  <alertRef>100000</alertRef>
  <alert>A Client Error response code was returned by the server</alert>
  <name>A Client Error response code was returned by the server</name>
  <riskcode>0</riskcode>
  <confidence>3</confidence>
  <riskdesc>Informational (High)</riskdesc>
  <desc>&lt;p&gt;A response code of 404 was returned by the server.&lt;/p&gt;&lt;p&gt;This may indicate that the application is failing to handle unexpected input correctly.&lt;/p&gt;&lt;p&gt;Raised by the &apos;Alert on HTTP Response Code Error&apos; script&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>POST</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/</uri>
  <method>OPTIONS</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/userbackup/login</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10/uploadImagebackup</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10%20-%20Copy/uploadImage</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 405</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithListXULFA</uri>
  <method>TRACK</method>
  <evidence>HTTP/1.1 405</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/petJSM1Z</uri>
  <method>TRACK</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/swagger.old</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/xm41/username</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByTags?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input</uri>
  <method>POST</method>
  <evidence>HTTP/1.1 405</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store.tar</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet.tar</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store.zip</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/swagger.json.jar</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/0mmot59qsh</uri>
  <method>PUT</method>
  <evidence>HTTP/1.1 405</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/Copy%20(3)%20of%20order</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet.zip</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/petLYYEJ</uri>
  <method>TRACK</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/o8</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 404</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithList?-s</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 405</evidence>
  </instance>
  </instances>
  <count>523</count>
  <solution>&lt;p&gt;&lt;/p&gt;</solution>
  <reference>&lt;p&gt;&lt;/p&gt;</reference>
  <cweid>388</cweid>
  <wascid>20</wascid>
  <sourceid>4</sourceid>
</alertitem>
<alertitem>
  <pluginid>100000</pluginid>
  <alertRef>100000</alertRef>
  <alert>A Server Error response code was returned by the server</alert>
  <name>A Server Error response code was returned by the server</name>
  <riskcode>1</riskcode>
  <confidence>3</confidence>
  <riskdesc>Low (High)</riskdesc>
  <desc>&lt;p&gt;A response code of 500 was returned by the server.&lt;/p&gt;&lt;p&gt;This may indicate that the application is failing to handle unexpected input correctly.&lt;/p&gt;&lt;p&gt;Raised by the &apos;Alert on HTTP Response Code Error&apos; script&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/user/username.bac</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithArray%20-%20Copy%20(3)</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/Copy%20(3)%20of%20username</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/wxu3k7i93kpxce</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByStatus?status=%24%7B300043%2B496933%7D</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByStatus?status=any%0D%0ASet-cookie%3A+Tamper%3Da18f02ed-471b-433c-a0b8-c409ec242d15</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/login~</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/lf75ls</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByTags?tags=any%3F%0D%0ASet-cookie%3A+Tamper%3Dedb998cd-a2a3-440b-9f11-d67d9bc5b434</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/logout%20-%20Copy</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/logout~</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByTags?tags=tags?name=abc</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/logout.old</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByTags?tags=%24%7B796557%2B243454%7D</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/login.bac</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByStatus?status=available%27+%2F+sleep%2815%29+%2F+%27</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/username.backup</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByTags?tags=%22</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/username.zip</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/login.backup</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500</evidence>
  </instance>
  </instances>
  <count>289</count>
  <solution>&lt;p&gt;&lt;/p&gt;</solution>
  <reference>&lt;p&gt;&lt;/p&gt;</reference>
  <cweid>388</cweid>
  <wascid>20</wascid>
  <sourceid>4</sourceid>
</alertitem>
<alertitem>
  <pluginid>100001</pluginid>
  <alertRef>100001</alertRef>
  <alert>Unexpected Content-Type was returned</alert>
  <name>Unexpected Content-Type was returned</name>
  <riskcode>1</riskcode>
  <confidence>3</confidence>
  <riskdesc>Low (High)</riskdesc>
  <desc>&lt;p&gt;A Content-Type of text/html was returned by the server.&lt;/p&gt;&lt;p&gt;This is not one of the types expected to be returned by an API.&lt;/p&gt;&lt;p&gt;Raised by the &apos;Alert on Unexpected Content Types&apos; script&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/privatekey.key</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/order?name=abc</uri>
  <method>GET</method>
  <evidence>application/xhtml+xml</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10/uploadImage?name=abc</uri>
  <method>GET</method>
  <evidence>application/xhtml+xml</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/key.pem</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/elmah.axd</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/dh/pet</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2</uri>
  <method>GET</method>
  <evidence>application/xhtml+xml</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/id_dsa</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2backup/store</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user?name=abc</uri>
  <method>GET</method>
  <evidence>application/xhtml+xml</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2%20-%20Copy%20(2)/swagger.json</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithList</uri>
  <method>GET</method>
  <evidence>application/xhtml+xml</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/CHANGELOG.txt</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/Copy%20of%20v2/swagger.json</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/.DS_Store</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store</uri>
  <method>GET</method>
  <evidence>application/xhtml+xml</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/Copy%20of%20v2/store</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/ws_ftp.ini</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/?name=abc</uri>
  <method>GET</method>
  <evidence>application/xhtml+xml</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/7k/swagger.json</uri>
  <method>GET</method>
  <evidence>text/html</evidence>
  </instance>
  </instances>
  <count>93</count>
  <solution>&lt;p&gt;&lt;/p&gt;</solution>
  <reference>&lt;p&gt;&lt;/p&gt;</reference>
  <sourceid>4</sourceid>
</alertitem>
<alertitem>
  <pluginid>10021</pluginid>
  <alertRef>10021</alertRef>
  <alert>X-Content-Type-Options Header Missing</alert>
  <name>X-Content-Type-Options Header Missing</name>
  <riskcode>1</riskcode>
  <confidence>2</confidence>
  <riskdesc>Low (Medium)</riskdesc>
  <desc>&lt;p&gt;The Anti-MIME-Sniffing header X-Content-Type-Options was not set to &apos;nosniff&apos;. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/swagger.json</uri>
  <method>GET</method>
  <param>X-Content-Type-Options</param>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/order/10</uri>
  <method>GET</method>
  <param>X-Content-Type-Options</param>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>PUT</method>
  <param>X-Content-Type-Options</param>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/order</uri>
  <method>POST</method>
  <param>X-Content-Type-Options</param>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>GET</method>
  <param>X-Content-Type-Options</param>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>POST</method>
  <param>X-Content-Type-Options</param>
  </instance>
  <instance>
  <uri>http://petstore:8080/</uri>
  <method>GET</method>
  <param>X-Content-Type-Options</param>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByStatus?status=available</uri>
  <method>GET</method>
  <param>X-Content-Type-Options</param>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/login?username=username&amp;password=ZAP</uri>
  <method>GET</method>
  <param>X-Content-Type-Options</param>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/inventory</uri>
  <method>GET</method>
  <param>X-Content-Type-Options</param>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByTags?tags=tags</uri>
  <method>GET</method>
  <param>X-Content-Type-Options</param>
  </instance>
  </instances>
  <count>11</count>
  <solution>&lt;p&gt;Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to &apos;nosniff&apos; for all web pages.&lt;/p&gt;&lt;p&gt;If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.&lt;/p&gt;</solution>
  <otherinfo>&lt;p&gt;This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.&lt;/p&gt;&lt;p&gt;At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.&lt;/p&gt;</otherinfo>
  <reference>&lt;p&gt;http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;</reference>
  <cweid>16</cweid>
  <wascid>15</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>10104</pluginid>
  <alertRef>10104</alertRef>
  <alert>User Agent Fuzzer</alert>
  <name>User Agent Fuzzer</name>
  <riskcode>0</riskcode>
  <confidence>2</confidence>
  <riskdesc>Informational (Medium)</riskdesc>
  <desc>&lt;p&gt;Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/user</uri>
  <method>POST</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>PUT</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/username</uri>
  <method>PUT</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/order/10</uri>
  <method>GET</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByTags?tags=tags</uri>
  <method>GET</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/username</uri>
  <method>DELETE</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/login?username=username&amp;password=ZAP</uri>
  <method>GET</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>DELETE</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithList</uri>
  <method>POST</method>
  <param>Header User-Agent</param>
  <attack>msnbot/1.1 (+http://search.msn.com/msnbot.htm)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/login?username=username&amp;password=ZAP</uri>
  <method>GET</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>DELETE</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>PUT</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/order/10</uri>
  <method>GET</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>GET</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithList</uri>
  <method>POST</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/username</uri>
  <method>GET</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithList</uri>
  <method>POST</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>GET</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithList</uri>
  <method>POST</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/username</uri>
  <method>PUT</method>
  <param>Header User-Agent</param>
  <attack>Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16</attack>
  </instance>
  </instances>
  <count>112</count>
  <solution>&lt;p&gt;&lt;/p&gt;</solution>
  <reference>&lt;p&gt;https://owasp.org/wstg&lt;/p&gt;</reference>
  <sourceid>1</sourceid>
</alertitem>
<alertitem>
  <pluginid>10049</pluginid>
  <alertRef>10049</alertRef>
  <alert>Storable and Cacheable Content</alert>
  <name>Storable and Cacheable Content</name>
  <riskcode>0</riskcode>
  <confidence>2</confidence>
  <riskdesc>Informational (Medium)</riskdesc>
  <desc>&lt;p&gt;The response contents are storable by caching components such as proxy servers, and may be retrieved directly from the cache, rather than from the origin server by the caching servers, in response to similar requests from other users.  If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where &quot;shared&quot; caching servers such as &quot;proxy&quot; caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>GET</method>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/inventory</uri>
  <method>GET</method>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>POST</method>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/swagger.json</uri>
  <method>GET</method>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/order/10</uri>
  <method>GET</method>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByStatus?status=available</uri>
  <method>GET</method>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>POST</method>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByTags?tags=tags</uri>
  <method>GET</method>
  </instance>
  </instances>
  <count>8</count>
  <solution>&lt;p&gt;Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:&lt;/p&gt;&lt;p&gt;Cache-Control: no-cache, no-store, must-revalidate, private&lt;/p&gt;&lt;p&gt;Pragma: no-cache&lt;/p&gt;&lt;p&gt;Expires: 0&lt;/p&gt;&lt;p&gt;This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request. &lt;/p&gt;</solution>
  <otherinfo>&lt;p&gt;In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.&lt;/p&gt;</otherinfo>
  <reference>&lt;p&gt;https://tools.ietf.org/html/rfc7234&lt;/p&gt;&lt;p&gt;https://tools.ietf.org/html/rfc7231&lt;/p&gt;&lt;p&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)&lt;/p&gt;</reference>
  <cweid>524</cweid>
  <wascid>13</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>10036</pluginid>
  <alertRef>10036</alertRef>
  <alert>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</alert>
  <name>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</name>
  <riskcode>1</riskcode>
  <confidence>3</confidence>
  <riskdesc>Low (High)</riskdesc>
  <desc>&lt;p&gt;The web/application server is leaking version information via the &quot;Server&quot; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/store/order/10</uri>
  <method>GET</method>
  <evidence>Jetty(9.2.9.v20150224)</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/swagger.json</uri>
  <method>GET</method>
  <evidence>Jetty(9.2.9.v20150224)</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>PUT</method>
  <evidence>Jetty(9.2.9.v20150224)</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/inventory</uri>
  <method>GET</method>
  <evidence>Jetty(9.2.9.v20150224)</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>GET</method>
  <evidence>Jetty(9.2.9.v20150224)</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10/uploadImage</uri>
  <method>POST</method>
  <evidence>Jetty(9.2.9.v20150224)</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>DELETE</method>
  <evidence>Jetty(9.2.9.v20150224)</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByTags?tags=tags</uri>
  <method>GET</method>
  <evidence>Jetty(9.2.9.v20150224)</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>POST</method>
  <evidence>Jetty(9.2.9.v20150224)</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByStatus?status=available</uri>
  <method>GET</method>
  <evidence>Jetty(9.2.9.v20150224)</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>POST</method>
  <evidence>Jetty(9.2.9.v20150224)</evidence>
  </instance>
  </instances>
  <count>11</count>
  <solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to suppress the &quot;Server&quot; header or provide generic details.&lt;/p&gt;</solution>
  <reference>&lt;p&gt;http://httpd.apache.org/docs/current/mod/core.html#servertokens&lt;/p&gt;&lt;p&gt;http://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007&lt;/p&gt;&lt;p&gt;http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx&lt;/p&gt;&lt;p&gt;http://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html&lt;/p&gt;</reference>
  <cweid>200</cweid>
  <wascid>13</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>30003</pluginid>
  <alertRef>30003</alertRef>
  <alert>Integer Overflow Error</alert>
  <name>Integer Overflow Error</name>
  <riskcode>2</riskcode>
  <confidence>2</confidence>
  <riskdesc>Medium (Medium)</riskdesc>
  <desc>&lt;p&gt;An integer overflow condition exists when an integer, which has not been properly checked from the input stream is used within a compiled program. &lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/store/order</uri>
  <method>POST</method>
  <param>quantity</param>
  <attack>98449529867930050934387401780420392389921423</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithArray</uri>
  <method>POST</method>
  <param>userStatus</param>
  <attack>84437056457908981755558928574208703236235648</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithList</uri>
  <method>POST</method>
  <param>userStatus</param>
  <attack>36819684555122815278625495673539772700868261</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithList</uri>
  <method>POST</method>
  <param>email</param>
  <attack>26216941770850760468294349009705476021062101</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>PUT</method>
  <param>id</param>
  <attack>60963041566326004491463175932831708412383529</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user</uri>
  <method>POST</method>
  <param>password</param>
  <attack>09832139320008935803830355436512891184082305</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>PUT</method>
  <param>id</param>
  <attack>65088559070792938907303822406865319343427880</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>POST</method>
  <param>photoUrls[0]</param>
  <attack>24404029262377480998870749151341174973088876</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithList</uri>
  <method>POST</method>
  <param>userStatus</param>
  <attack>78776367831397937455400250032603292570835573</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithArray</uri>
  <method>POST</method>
  <param>password</param>
  <attack>04549520218684716127060217275098844644752498</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithArray</uri>
  <method>POST</method>
  <param>email</param>
  <attack>35304956120150505278542620514204985025041832</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>POST</method>
  <param>name</param>
  <attack>33552042004077040412400965813784659177571586</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithList</uri>
  <method>POST</method>
  <param>firstName</param>
  <attack>64835386776139549585491800616605506817680459</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/username</uri>
  <method>PUT</method>
  <param>lastName</param>
  <attack>61990997170035261001143174339748564507994120</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithList</uri>
  <method>POST</method>
  <param>lastName</param>
  <attack>22419654337541714774707770437096476945436261</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/username</uri>
  <method>PUT</method>
  <param>phone</param>
  <attack>59992480120909649721174545639457869417304436</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithArray</uri>
  <method>POST</method>
  <param>phone</param>
  <attack>55626920913302309198837267058083926587403227</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>POST</method>
  <param>status</param>
  <attack>80222758724135316108584161775192202526726242</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user</uri>
  <method>POST</method>
  <param>phone</param>
  <attack>90862988870824697016486943649131356766745818</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/createWithList</uri>
  <method>POST</method>
  <param>lastName</param>
  <attack>05063738484385547625152742371185980259283667</attack>
  </instance>
  </instances>
  <count>72</count>
  <solution>&lt;p&gt;Rewrite the background program using proper checking of the size of integer being input to prevent overflows and divide by 0 errors.  This will require a recompile of the background executable.&lt;/p&gt;</solution>
  <otherinfo>&lt;p&gt;Potential Integer Overflow.  Status code changed on the input of a long string of random integers.&lt;/p&gt;</otherinfo>
  <reference>&lt;p&gt;http://projects.webappsec.org/w/page/13246946/Integer%20Overflows&lt;/p&gt;</reference>
  <cweid>190</cweid>
  <wascid>3</wascid>
  <sourceid>1</sourceid>
</alertitem>
<alertitem>
  <pluginid>40012</pluginid>
  <alertRef>40012</alertRef>
  <alert>Cross Site Scripting Weakness (Reflected in JSON Response)</alert>
  <name>Cross Site Scripting Weakness (Reflected in JSON Response)</name>
  <riskcode>1</riskcode>
  <confidence>1</confidence>
  <riskdesc>Low (Low)</riskdesc>
  <desc>&lt;p&gt;A XSS attack was reflected in a JSON response, this might leave content consumers vulnerable to attack if they don&apos;t appropriately handle the data (response).&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>POST</method>
  <param>status</param>
  <attack>&lt;script&gt;alert(1);&lt;/script&gt;</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>POST</method>
  <param>photoUrls[0]</param>
  <attack>&lt;script&gt;alert(1);&lt;/script&gt;</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>POST</method>
  <param>name</param>
  <attack>&lt;script&gt;alert(1);&lt;/script&gt;</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/order</uri>
  <method>POST</method>
  <param>status</param>
  <attack>&lt;script&gt;alert(1);&lt;/script&gt;</attack>
  </instance>
  </instances>
  <count>4</count>
  <solution>&lt;p&gt;Phase: Architecture and Design&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.&lt;/p&gt;&lt;p&gt;Examples of libraries and frameworks that make it easier to generate properly encoded output include Microsoft&apos;s Anti-XSS library, the OWASP ESAPI Encoding module, and Apache Wicket.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phases: Implementation; Architecture and Design&lt;/p&gt;&lt;p&gt;Understand the context in which your data will be used and the encoding that will be expected. This is especially important when transmitting data between different components, or when generating outputs that can contain multiple encodings at the same time, such as web pages or multi-part mail messages. Study all expected communication protocols and data representations to determine the required encoding strategies.&lt;/p&gt;&lt;p&gt;For any data that will be output to another web page, especially any data that was received from external inputs, use the appropriate encoding on all non-alphanumeric characters.&lt;/p&gt;&lt;p&gt;Consult the XSS Prevention Cheat Sheet for more details on the types of encoding and escaping that are needed.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Architecture and Design&lt;/p&gt;&lt;p&gt;For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;If available, use structured mechanisms that automatically enforce the separation between data and code. These mechanisms may be able to provide the relevant quoting, encoding, and validation automatically, instead of relying on the developer to provide this capability at every point where output is generated.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Implementation&lt;/p&gt;&lt;p&gt;For every web page that is generated, use and specify a character encoding such as ISO-8859-1 or UTF-8. When an encoding is not specified, the web browser may choose a different encoding by guessing which encoding is actually being used by the web page. This can cause the web browser to treat certain sequences as special, opening up the client to subtle XSS attacks. See CWE-116 for more mitigations related to encoding/escaping.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;To help mitigate XSS attacks against the user&apos;s session cookie, set the session cookie to be HttpOnly. In browsers that support the HttpOnly feature (such as more recent versions of Internet Explorer and Firefox), this attribute can prevent the user&apos;s session cookie from being accessible to malicious client-side scripts that use document.cookie. This is not a complete solution, since HttpOnly is not supported by all browsers. More importantly, XMLHTTPRequest and other powerful browser technologies provide read access to HTTP headers, including the Set-Cookie header in which the HttpOnly flag is set.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Assume all input is malicious. Use an &quot;accept known good&quot; input validation strategy, i.e., use an allow list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a deny list). However, deny lists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, &quot;boat&quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if you are expecting colors such as &quot;red&quot; or &quot;blue.&quot;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Ensure that you perform input validation at well-defined interfaces within the application. This will help protect the application even if a component is reused or moved elsewhere.&lt;/p&gt;</solution>
  <otherinfo>&lt;p&gt;Raised with LOW confidence as the Content-Type is not HTML&lt;/p&gt;</otherinfo>
  <reference>&lt;p&gt;http://projects.webappsec.org/Cross-Site-Scripting&lt;/p&gt;&lt;p&gt;http://cwe.mitre.org/data/definitions/79.html&lt;/p&gt;</reference>
  <cweid>79</cweid>
  <wascid>8</wascid>
  <sourceid>1</sourceid>
</alertitem>
<alertitem>
  <pluginid>10098</pluginid>
  <alertRef>10098</alertRef>
  <alert>Cross-Domain Misconfiguration</alert>
  <name>Cross-Domain Misconfiguration</name>
  <riskcode>2</riskcode>
  <confidence>2</confidence>
  <riskdesc>Medium (Medium)</riskdesc>
  <desc>&lt;p&gt;Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByTags?tags=tags</uri>
  <method>GET</method>
  <evidence>Access-Control-Allow-Origin: *</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/swagger.json</uri>
  <method>GET</method>
  <evidence>Access-Control-Allow-Origin: *</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>POST</method>
  <evidence>Access-Control-Allow-Origin: *</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>DELETE</method>
  <evidence>Access-Control-Allow-Origin: *</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10/uploadImage</uri>
  <method>POST</method>
  <evidence>Access-Control-Allow-Origin: *</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>GET</method>
  <evidence>Access-Control-Allow-Origin: *</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/order/10</uri>
  <method>GET</method>
  <evidence>Access-Control-Allow-Origin: *</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>POST</method>
  <evidence>Access-Control-Allow-Origin: *</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>PUT</method>
  <evidence>Access-Control-Allow-Origin: *</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/findByStatus?status=available</uri>
  <method>GET</method>
  <evidence>Access-Control-Allow-Origin: *</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/inventory</uri>
  <method>GET</method>
  <evidence>Access-Control-Allow-Origin: *</evidence>
  </instance>
  </instances>
  <count>11</count>
  <solution>&lt;p&gt;Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).&lt;/p&gt;&lt;p&gt;Configure the &quot;Access-Control-Allow-Origin&quot; HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.&lt;/p&gt;</solution>
  <otherinfo>&lt;p&gt;The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.&lt;/p&gt;</otherinfo>
  <reference>&lt;p&gt;http://www.hpenterprisesecurity.com/vulncat/en/vulncat/vb/html5_overly_permissive_cors_policy.html&lt;/p&gt;</reference>
  <cweid>264</cweid>
  <wascid>14</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>10049</pluginid>
  <alertRef>10049</alertRef>
  <alert>Non-Storable Content</alert>
  <name>Non-Storable Content</name>
  <riskcode>0</riskcode>
  <confidence>2</confidence>
  <riskdesc>Informational (Medium)</riskdesc>
  <desc>&lt;p&gt;The response contents are not storable by caching components such as proxy servers. If the response does not contain sensitive, personal or user-specific information, it may benefit from being stored and cached, to improve performance.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>PUT</method>
  <evidence>PUT </evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10/uploadImage</uri>
  <method>POST</method>
  <evidence>415</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>DELETE</method>
  <evidence>DELETE </evidence>
  </instance>
  </instances>
  <count>3</count>
  <solution>&lt;p&gt;The content may be marked as storable by ensuring that the following conditions are satisfied:&lt;/p&gt;&lt;p&gt;The request method must be understood by the cache and defined as being cacheable (&quot;GET&quot;, &quot;HEAD&quot;, and &quot;POST&quot; are currently defined as cacheable)&lt;/p&gt;&lt;p&gt;The response status code must be understood by the cache (one of the 1XX, 2XX, 3XX, 4XX, or 5XX response classes are generally understood)&lt;/p&gt;&lt;p&gt;The &quot;no-store&quot; cache directive must not appear in the request or response header fields&lt;/p&gt;&lt;p&gt;For caching by &quot;shared&quot; caches such as &quot;proxy&quot; caches, the &quot;private&quot; response directive must not appear in the response&lt;/p&gt;&lt;p&gt;For caching by &quot;shared&quot; caches such as &quot;proxy&quot; caches, the &quot;Authorization&quot; header field must not appear in the request, unless the response explicitly allows it (using one of the &quot;must-revalidate&quot;, &quot;public&quot;, or &quot;s-maxage&quot; Cache-Control response directives)&lt;/p&gt;&lt;p&gt;In addition to the conditions above, at least one of the following conditions must also be satisfied by the response:&lt;/p&gt;&lt;p&gt;It must contain an &quot;Expires&quot; header field&lt;/p&gt;&lt;p&gt;It must contain a &quot;max-age&quot; response directive&lt;/p&gt;&lt;p&gt;For &quot;shared&quot; caches such as &quot;proxy&quot; caches, it must contain a &quot;s-maxage&quot; response directive&lt;/p&gt;&lt;p&gt;It must contain a &quot;Cache Control Extension&quot; that allows it to be cached&lt;/p&gt;&lt;p&gt;It must have a status code that is defined as cacheable by default (200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501).   &lt;/p&gt;</solution>
  <reference>&lt;p&gt;https://tools.ietf.org/html/rfc7234&lt;/p&gt;&lt;p&gt;https://tools.ietf.org/html/rfc7231&lt;/p&gt;&lt;p&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)&lt;/p&gt;</reference>
  <cweid>524</cweid>
  <wascid>13</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>10063</pluginid>
  <alertRef>10063</alertRef>
  <alert>Feature Policy Header Not Set</alert>
  <name>Feature Policy Header Not Set</name>
  <riskcode>1</riskcode>
  <confidence>2</confidence>
  <riskdesc>Low (Medium)</riskdesc>
  <desc>&lt;p&gt;Feature Policy Header is an added layer of security that helps to restrict from unauthorized access or usage of browser/client features by web resources. This policy ensures the user privacy by limiting or specifying the features of the browsers can be used by the web resources. Feature Policy provides a set of standard HTTP headers that allow website owners to limit which features of browsers can be used by the page such as camera, microphone, location, full screen etc.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/</uri>
  <method>GET</method>
  </instance>
  </instances>
  <count>1</count>
  <solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Feature-Policy header.&lt;/p&gt;</solution>
  <reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/updates/2018/06/feature-policy&lt;/p&gt;&lt;p&gt;https://scotthelme.co.uk/a-new-security-header-feature-policy/&lt;/p&gt;&lt;p&gt;https://w3c.github.io/webappsec-feature-policy/&lt;/p&gt;&lt;p&gt;https://www.smashingmagazine.com/2018/12/feature-policy/&lt;/p&gt;</reference>
  <cweid>16</cweid>
  <wascid>15</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>10109</pluginid>
  <alertRef>10109</alertRef>
  <alert>Modern Web Application</alert>
  <name>Modern Web Application</name>
  <riskcode>0</riskcode>
  <confidence>2</confidence>
  <riskdesc>Informational (Medium)</riskdesc>
  <desc>&lt;p&gt;The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/</uri>
  <method>GET</method>
  <evidence>&lt;script src=&quot;./swagger-ui-bundle.js&quot;&gt; &lt;/script&gt;</evidence>
  </instance>
  </instances>
  <count>1</count>
  <solution>&lt;p&gt;This is an informational alert and so no changes are required.&lt;/p&gt;</solution>
  <otherinfo>&lt;p&gt;No links have been found while there are scripts, which is an indication that this is a modern web application.&lt;/p&gt;</otherinfo>
  <reference>&lt;p&gt;&lt;/p&gt;</reference>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>90028</pluginid>
  <alertRef>90028</alertRef>
  <alert>Insecure HTTP Method - DELETE</alert>
  <name>Insecure HTTP Method - DELETE</name>
  <riskcode>2</riskcode>
  <confidence>2</confidence>
  <riskdesc>Medium (Medium)</riskdesc>
  <desc>&lt;p&gt;The insecure HTTP method [DELETE] is enabled on the web server for this resource. Depending on the web server configuration, and the underlying implementation responsible for serving the resource, this might or might not be exploitable. The TRACK and TRACE methods may be used by an attacker, to gain access to the authorisation token/session cookie of an application user, even if the session cookie is protected using the HttpOnly flag. For the attack to be successful, the application user must typically be using an older web browser, or a web browser which has a Same Origin Policy (SOP) bypass vulnerability. The CONNECT method can be used by a web client to create an HTTP tunnel to third party websites or services.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/pet/10</uri>
  <method>OPTIONS</method>
  <evidence>DELETE</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/username</uri>
  <method>OPTIONS</method>
  <evidence>DELETE</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/store/order/10</uri>
  <method>OPTIONS</method>
  <evidence>DELETE</evidence>
  </instance>
  </instances>
  <count>3</count>
  <solution>&lt;p&gt;Disable insecure methods such as TRACK, TRACE, and CONNECT on the web server, and ensure that the underlying service implementation does not support insecure methods.&lt;/p&gt;</solution>
  <otherinfo>&lt;p&gt;The OPTIONS method disclosed the following enabled HTTP methods for this resource: [OPTIONS,HEAD,DELETE,POST,GET]&lt;/p&gt;</otherinfo>
  <reference>&lt;p&gt;http://projects.webappsec.org/Fingerprinting&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</reference>
  <cweid>200</cweid>
  <wascid>45</wascid>
  <sourceid>1</sourceid>
</alertitem>
<alertitem>
  <pluginid>30002</pluginid>
  <alertRef>30002</alertRef>
  <alert>Format String Error</alert>
  <name>Format String Error</name>
  <riskcode>2</riskcode>
  <confidence>2</confidence>
  <riskdesc>Medium (Medium)</riskdesc>
  <desc>&lt;p&gt;A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. &lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>POST</method>
  <param>photoUrls[0]</param>
  <attack>ZAP%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s
</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>POST</method>
  <param>name</param>
  <attack>ZAP%x%x%x%x%x%x%x%x%x%x
</attack>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/pet</uri>
  <method>PUT</method>
  <param>photoUrls[0]</param>
  <attack>ZAP%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s
</attack>
  </instance>
  </instances>
  <count>3</count>
  <solution>&lt;p&gt;Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.&lt;/p&gt;</solution>
  <otherinfo>&lt;p&gt;Potential Format String Error.  The script closed the connection on a /%s&lt;/p&gt;</otherinfo>
  <reference>&lt;p&gt;https://owasp.org/www-community/attacks/Format_string_attack&lt;/p&gt;</reference>
  <cweid>134</cweid>
  <wascid>6</wascid>
  <sourceid>1</sourceid>
</alertitem>
<alertitem>
  <pluginid>10020</pluginid>
  <alertRef>10020</alertRef>
  <alert>X-Frame-Options Header Not Set</alert>
  <name>X-Frame-Options Header Not Set</name>
  <riskcode>2</riskcode>
  <confidence>2</confidence>
  <riskdesc>Medium (Medium)</riskdesc>
  <desc>&lt;p&gt;X-Frame-Options header is not included in the HTTP response to protect against &apos;ClickJacking&apos; attacks.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/</uri>
  <method>GET</method>
  <param>X-Frame-Options</param>
  </instance>
  </instances>
  <count>1</count>
  <solution>&lt;p&gt;Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it&apos;s set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it&apos;s part of a FRAMESET) then you&apos;ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy&apos;s &quot;frame-ancestors&quot; directive. &lt;/p&gt;</solution>
  <reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options&lt;/p&gt;</reference>
  <cweid>16</cweid>
  <wascid>15</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>90003</pluginid>
  <alertRef>90003</alertRef>
  <alert>Sub Resource Integrity Attribute Missing</alert>
  <name>Sub Resource Integrity Attribute Missing</name>
  <riskcode>2</riskcode>
  <confidence>3</confidence>
  <riskdesc>Medium (High)</riskdesc>
  <desc>&lt;p&gt;The integrity attribute is missing on a script or link tag served by an external server. The integrity tag prevents an attacker who have gained access to this server from injecting a malicious content. &lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/</uri>
  <method>GET</method>
  <evidence>&lt;link href=&quot;https://fonts.googleapis.com/css?family=Open+Sans:400,700|Source+Code+Pro:300,600|Titillium+Web:400,600,700&quot; rel=&quot;stylesheet&quot;&gt;</evidence>
  </instance>
  </instances>
  <count>1</count>
  <solution>&lt;p&gt;Provide a valid integrity attribute to the tag.&lt;/p&gt;</solution>
  <reference>&lt;p&gt;https://developer.mozilla.org/en/docs/Web/Security/Subresource_Integrity&lt;/p&gt;</reference>
  <cweid>16</cweid>
  <wascid>15</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>10038</pluginid>
  <alertRef>10038</alertRef>
  <alert>Content Security Policy (CSP) Header Not Set</alert>
  <name>Content Security Policy (CSP) Header Not Set</name>
  <riskcode>2</riskcode>
  <confidence>3</confidence>
  <riskdesc>Medium (High)</riskdesc>
  <desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/</uri>
  <method>GET</method>
  </instance>
  </instances>
  <count>1</count>
  <solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: &quot;Content-Security-Policy&quot; for Chrome 25+, Firefox 23+ and Safari 7+, &quot;X-Content-Security-Policy&quot; for Firefox 4.0+ and Internet Explorer 10+, and &quot;X-WebKit-CSP&quot; for Chrome 14+ and Safari 6+.&lt;/p&gt;</solution>
  <reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy&lt;/p&gt;&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html&lt;/p&gt;&lt;p&gt;http://www.html5rocks.com/en/tutorials/security/content-security-policy/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#feat=contentsecuritypolicy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;</reference>
  <cweid>16</cweid>
  <wascid>15</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>10024</pluginid>
  <alertRef>10024</alertRef>
  <alert>Information Disclosure - Sensitive Information in URL</alert>
  <name>Information Disclosure - Sensitive Information in URL</name>
  <riskcode>0</riskcode>
  <confidence>2</confidence>
  <riskdesc>Informational (Medium)</riskdesc>
  <desc>&lt;p&gt;The request appeared to contain sensitive information leaked in the URL. This can violate PCI and most organizational compliance policies. You can configure the list of strings for this check to add or remove values specific to your environment.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/user/login?username=username&amp;password=ZAP</uri>
  <method>GET</method>
  <param>username</param>
  <evidence>username</evidence>
  </instance>
  <instance>
  <uri>http://petstore:8080/v2/user/login?username=username&amp;password=ZAP</uri>
  <method>GET</method>
  <param>password</param>
  <evidence>password</evidence>
  </instance>
  </instances>
  <count>2</count>
  <solution>&lt;p&gt;Do not pass sensitive information in URIs.&lt;/p&gt;</solution>
  <otherinfo>&lt;p&gt;The URL contains potentially sensitive information. The following string was found via the pattern: user&lt;/p&gt;&lt;p&gt;username&lt;/p&gt;</otherinfo>
  <reference>&lt;p&gt;&lt;/p&gt;</reference>
  <cweid>200</cweid>
  <wascid>13</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>43</pluginid>
  <alertRef>43</alertRef>
  <alert>Source Code Disclosure - File Inclusion</alert>
  <name>Source Code Disclosure - File Inclusion</name>
  <riskcode>3</riskcode>
  <confidence>2</confidence>
  <riskdesc>High (Medium)</riskdesc>
  <desc>&lt;p&gt;The source code for the current page was disclosed by the web server&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>http://petstore:8080/v2/store/order</uri>
  <method>POST</method>
  <param>status</param>
  <attack>order</attack>
  </instance>
  </instances>
  <count>1</count>
  <solution>&lt;p&gt;Ensure that arbitrary files specified by the user are not included in the output&lt;/p&gt;</solution>
  <otherinfo>&lt;p&gt;The output for the source code filename [order] differs sufficiently from that of the random parameter [bdypyjnsqeguxsjozwybtsndqucmwytowhvqvy], at [74%], compared to a threshold of [75%]&lt;/p&gt;</otherinfo>
  <reference>&lt;p&gt;http://projects.webappsec.org/Path-Traversal&lt;/p&gt;&lt;p&gt;http://cwe.mitre.org/data/definitions/22.html&lt;/p&gt;</reference>
  <cweid>541</cweid>
  <wascid>33</wascid>
  <sourceid>1</sourceid>
</alertitem>
</alerts></site></OWASPZAPReport>